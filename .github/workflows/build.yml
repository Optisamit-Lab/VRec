name: Minimal Android CI Workflow

on:
  - push #:
    #branches:
    #  - master
    #paths:
    #  - 'app/version.properties'
  - workflow_dispatch

jobs:
  apk:
    name: Generate APK
    runs-on: ubuntu-latest
    environment: test
    outputs:
      new-version: ${{ steps.bump_version.outputs.version_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Decode Keystore File
        run: echo "${{ secrets.STORE_FILE }}" | base64 -d > release.keystore
      - name: Configure Git
        run: |
          git config --local user.email "optisamit@gmail.com"
          git config --local user.name "Build action"
      - name: Bump version
        id: bump_version
        run: |
          pwd
          VERSION_NAME=$(cat version_name.txt)
          echo "version_name=$VERSION_NAME"
          echo "version_name=$VERSION_NAME" >> "$GITHUB_OUTPUT"
      - name: Build APK
        env:
          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: bash ./gradlew assembleRelease --stacktrace
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: app/build/outputs/apk/release/app-release.apk
  release:
    name: Release APK
    needs: apk
    runs-on: ubuntu-latest
    steps:
      - name: Download APK from build
        uses: actions/download-artifact@v4
        with:
          name: apk
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.apk.outputs.new-version }}
          release_name: Release ${{ needs.apk.outputs.new-version }}
      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/app-release.apk
          asset_name: VRec.apk
          asset_content_type: application/zip