name: Generic APK Builder

on:
  workflow_call:
    inputs:
      BUILD-VARIANT:
        required: false
        type: string
        description: "Build variant with flavor dimension values and build type separated by dashes, e.g. 'free-PROD-release'"
        default: "debug"
      ENV-NAME:
        required: false
        type: string
      VERSION-NAME:
        required: false
        type: string
        description: "APK's version name to use if bumpVersion task is not defined or fails"
    secrets:
      STORE_FILE:
        required: false
        description: "Base64-encoded keystore file contents"
      STORE_PASSWORD:
        required: false
      KEY_ALIAS:
        required: false
      KEY_PASSWORD:
        required: false
      TOKEN:
        required: false

jobs:
  apk:
    name: Generate APK
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENV-NAME }}
    outputs:
      new-version: ${{ steps.bump_version.outputs.version_name }}
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Configure Git
        run: |
          git config --local user.email "abc@example.com"
          git config --local user.name "Build workflow"
      - name: Bump version
        id: bump_version
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN != '' && secrets.token || secrets.GITHUB_TOKEN }}
        run: |
          bash ./gradlew bumpVersion
          VERSION_NAME=$(cat version_name.txt)
          echo "version_name=$VERSION_NAME"
          echo "version_name=$VERSION_NAME" >> "$GITHUB_OUTPUT"
      - name: Decode Keystore File
        run: echo "${{ secrets.STORE_FILE }}" | base64 -d > release.keystore
      - name: Process build type
        id: process-build-type
        env:
          INPUT_STRING: ${{ inputs.BUILD-VARIANT }}
        run: |
          IFS='-' read -r -a segments <<< "$INPUT_STRING"
          capitalized=""
          for segment in "${segments[@]}"; do
            # Capitalize only the first letter of each segment
            capitalized+="${segment^}"
          done
          # Output the original segments as an array
          echo ::set-output name=segments_array::"${segments[*]}"
          echo ::set-output name=capitalized_build_type::"$capitalized"
      - name: Build APK
        env:
          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: bash ./gradlew assemble${{ steps.process-build-type.outputs.capitalized_build_type }}
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: app/build/outputs/apk/${{ join(steps.process-build-type.outputs.segments_array, '/') }}/app-${{ inputs.BUILD-VARIANT }}.apk
  release:
    name: Release APK
    needs: apk
    runs-on: ubuntu-latest
    steps:
      - name: Download APK from build
        uses: actions/download-artifact@v4
        with:
          name: apk
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.apk.outputs.new-version != '' && needs.apk.outputs.new-version || inputs.VERSION-NAME }}
          release_name: ${{ needs.apk.outputs.new-version != '' && needs.apk.outputs.new-version || inputs.VERSION-NAME }}
      - name: Set up repository name
        run: echo "REPO_NAME=$(echo $GITHUB_REPOSITORY | cut -d '/' -f 2)" >> $GITHUB_ENV
      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app-${{ inputs.BUILD-VARIANT }}.apk
          asset_name: ${{ env.REPO_NAME }}.apk
          asset_content_type: application/zip